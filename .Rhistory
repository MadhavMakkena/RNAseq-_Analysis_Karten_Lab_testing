FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=list, #list of genes to label (NULL to not label any)
col=NULL, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol=NULL, #Colour value for upregulated genes, NULL will be red
dncol=NULL) #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NUKLL, #list of genes to label (NULL to not label any)
col=genes, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol=NULL, #Colour value for upregulated genes, NULL will be red
dncol=NULL) #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NUKLL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol=NULL, #Colour value for upregulated genes, NULL will be red
dncol=NULL) #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol=NULL, #Colour value for upregulated genes, NULL will be red
dncol=NULL) #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol=Green, #Colour value for upregulated genes, NULL will be red
dncol=Grey) #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="Green", #Colour value for upregulated genes, NULL will be red
dncol="Grey") #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="Dark green", #Colour value for upregulated genes, NULL will be red
dncol="Grey") #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="Darkolivegreen", #Colour value for upregulated genes, NULL will be red
dncol="Grey") #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="Grey") #Colour value for downregulated genes, NULL will be blue)
volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- c(testlist)
testlist <- as.array(testlist)
testlist <- as.data.frame(testlist)
View(testlist)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- as.data.frame(testlist)
testlist <- as.data.frame(testlist)
testlist <- c(testlist)
View(testlist)
write.csv(testlist, "testlist.csv")
write.txt(testlist, "testlist.csv")
write.txt(testlist, "testlist.txt")
View(testlist)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- as.data.frame(c(testlist))
testlist <- as.matrix(c(testlist))
View(testlist)
write.csv(testlist, "testlist.csv")
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist_up <- list(testlist_up=testlist$Up)
testlist_down <- list(testlist_down=testlist$Down)
View(testlist_down)
testlist_up <- c(list(testlist_up=testlist$Up))
testlist_down <- c(list(testlist_down=testlist$Down))
write.csv(testlist_up, "testlist_up.csv")
write.csv(testlist_up, "testlist_up.csv", row.names = 1, header = TRUE)
write.csv(testlist_up, "testlist_up.csv", row.names = 1)
write.csv(testlist_up, "testlist_up.csv", row.names = TRUE)
write.csv(testlist_up, "testlist_up.csv", row.names = FALSE)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=T, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist_up <- c(list(testlist_up=testlist$Up))
testlist_down <- c(list(testlist_down=testlist$Down))
write.csv(testlist_down, "testlist_down.csv", row.names = FALSE)
write.csv(testlist_down, "testlist_down.csv", row.names = TRUE)
write.csv(testlist_down, "testlist_down.csv", row.names = FALSE)
write.csv(testlist_up, "testlist_up.csv", row.names = TRUE)
View(testlist_up)
View(testlist)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=T, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=T, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=F, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab="NPC1", #list of genes to label (NULL to not label any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab="NPC1", #list of genes to label (NULL to not label any)
col="NPC1", #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist_up <- c(list(testlist_up=testlist$Up))
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab="NPC1", #list of genes to label (NULL to not label any)
col="NPC1", #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
a <- "NPC1"
a <- NPC1
a <- "NPC1"
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
a <- "HDLBP"
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
a <- "NPC2"
par(mfrow=c(1,1))
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
a <- "NPC1"
par(mfrow=c(1,1))
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
a <- "NPC2"
par(mfrow=c(1,1))
testlist <- volcanoPlot(res=result, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
gsva_plot(
counts = count_HGNC_cholesterol,
geneset = list,
method = "ssgsea",
condition = cond,
con = "Fibroblast",
title = "test",
col = "Dark2",
style = "violin",
)
testlist <- volcanoPlot(res=cholesterol_gene_sets_combined, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Vibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Fibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
# setting the directory
setwd("/Users/madhavmakkena/Downloads/RNAseq")
# barplot(colSums(raw_counts), col= c("C_1" = "orange","C_2" = "orange","S_1" = "lightblue", "S_2" = "lightblue"))
# head(raw_counts, 10)
# raw_counts <- getSym(object=raw_counts,
#                         obType="counts",
#                         species="hsapiens",
#                         target="HGNC",
#                         addCol=F)
# head(raw_counts)
# write.csv(raw_counts,"raw_counts_HGNC.csv", row.names = TRUE)
# if already performed ^ then
raw_counts <- read.csv("raw_counts_HGNC.csv", header = TRUE, row.names = 1)
# loading the sample information
sample_cond <- read.csv('sample_conditions.csv', header = TRUE, row.names = "sample")
# checking if the sample names in sample data match the count data
all (rownames(sample_cond) %in% colnames(raw_counts))
all (rownames(sample_cond) == colnames(raw_counts))
# cleaning up raw_counts to remove genes with 0 counts in ALL samples
raw_counts<- raw_counts[rowSums(raw_counts) != 0, ]
#DESeq analysis
#storing the input values from raw_counts
library(DESeq2)
DESeq <- DESeqDataSetFromMatrix(countData = raw_counts, colData = sample_cond, design = ~ condition)
DESeq_hist <- sort(rowMeans(counts(estimateSizeFactors(DESeq), normalized = T)), decreasing = T)
summary(DESeq)
summary(DESeq_hist)
#performing DESeq2 on DESeq
DESeq <-DESeq(DESeq)
#normalising the counts exp
count <- as.data.frame(counts(DESeq, normalized=TRUE))
head(count,10)
#extracting the results from DESeq
# result <- as.data.frame(results(DESeq, contrast=c("condition", "Fibroblast", "SH-SY5Y")))
result <- as.data.frame(results(DESeq))
head(result,10)
#extracting the conditions from DESeq
cond<-as.character(DESeq$condition)
#installing packages for BinfTools
# BiocManager::install("SAGx")
# BiocManager::install("GSVA")
# BiocManager::install("fgsea")
# BiocManager::install("gage")
# BiocManager::install("qusage")
# devtools::install_github("kevincjnixon/gpGeneSets")
# devtools::install_github("kevincjnixon/BinfTools", force = TRUE)
# devtools::update_packages("BinfTools")
# library("BinfTools")
lapply(c("SAGx", "GSVA", "fgsea", "gage", "qusage", "gpGeneSets", "BinfTools"), require, character.only = TRUE)
count_HGNC_cholesterol <- read.csv("count_HGNC_cholesterol.csv", row.names = 1, header = TRUE)
result_HGNC_cholesterol <- read.csv("result_HGNC_cholesterol.csv", row.names = 1, header = TRUE)
#
par(mfrow=c(2,3))
plotCounts(DESeq, gene="PSMB2", intgroup="condition", transform=F, ylim=c(50, 4000))
plotCounts(DESeq, gene="NPC1", intgroup="condition", transform=F, ylim=c(50, 4000))
plotCounts(DESeq, gene="NPC2", intgroup="condition", transform=F, ylim=c(50, 4000))
plotCounts(DESeq, gene="ABCA1", intgroup="condition", transform=F, ylim=c(50, 4000))
plotCounts(DESeq, gene="STARD3", intgroup="condition", transform=F, ylim=c(50, 4000))
plotCounts(DESeq, gene="STARD4", intgroup="condition", transform=F, ylim=c(50, 4000))
par(mfrow=c(1,1))
testlist <- volcanoPlot(res=result_HGNC_cholesterol, #Results object
title="Fibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=a, #list of genes to label (NULL to not label any)
col=a, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
testlist <- volcanoPlot(res=result, #Results object
title="Fibroblast vs SH_SY5Y",
p=0.05, #adjusted p-value threshold for DEGs
FC=log2(1.5), #log2FoldChange threshold for DEGs (can be 0)
lab=NULL, #list of genes to label (NULL to not label any)
col=NULL, #list of genes to colour (NULL to not colour any)
fclim=NULL, #x-axis (log2FoldChange) limits, genes passing this limit will be represented as triangles on the edge of the plot - good if you have some extreme outliers
showNum=F, #Show the numbers of genes on the plot?
returnDEG=T, #Return list of DEGs (Down, Up) - this is good for running GO later on
expScale=F, #Scale point size to mean expression?
upcol="forestgreen", #Colour value for upregulated genes, NULL will be red
dncol="firebrick") #Colour value for downregulated genes, NULL will be blue)
